class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        if(obstacleGrid[0][0] == 1)
        {
            return 0;
        }
        int row = obstacleGrid.size();
        int col = obstacleGrid[0].size();
        int dp[row][col];
        for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
                if(i==0 && j==0)
                {
                    dp[i][j] = 1;
                }
                else if(i==0)
                {
                    if(obstacleGrid[i][j-1]==1 || obstacleGrid[i][j] == 1||dp[i][j-1] == 0)
                    {
                        dp[i][j] = 0;
                    }
                    else
                    {
                        dp[i][j] = 1;
                    }
                }
                else if(j==0)
                {
                    if(obstacleGrid[i-1][j] == 1 || obstacleGrid[i][j] ==1||dp[i-1][j]==0)
                    {
                        dp[i][j] = 0;
                    }
                    else
                    {
                        dp[i][j] = 1;
                    }
                }
                else
                {
                    if(obstacleGrid[i][j] != 1)
                    {
                        dp[i][j] = dp[i-1][j] + dp[i][j-1];
                    }
                    else
                    {
                        dp[i][j] = 0;
                    }
                    
                }
            }
        }
        
        return dp[row-1][col-1];
    }
};
